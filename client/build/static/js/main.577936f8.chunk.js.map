{"version":3,"sources":["images/search.svg","images/addLog.svg","images/todo.svg","images/account.svg","images/log.svg","images/magnifying.svg","images/editPencil.svg","images/home.svg","contexts/UserContext.js","components/Loading.js","components/PhotoEditor.js","components/log/LogForm.js","pages/Add.js","pages/Edit.js","components/account/ForgotPassword.js","helpers.js","components/account/Login.js","components/account/Register.js","components/account/ThemeSwitcher.js","pages/GuestHome.js","pages/Home.js","components/vehicle/VehiclesSelector.js","components/log/LogEntry.js","components/log/LogSorter.js","pages/Log.js","pages/NotFound.js","pages/PasswordReset.js","components/SearchResults.js","components/SearchBox.js","pages/Search.js","components/account/Logout.js","components/account/AccountSettings.js","components/vehicle/VLVin.js","components/vehicle/VLManual.js","components/vehicle/VLYMM.js","components/vehicle/VehicleSettings.js","pages/Settings.js","pages/SingleLogEntry.js","pages/Todo.js","components/Nav.js","components/account/ProtectedRoute.js","components/ScrollToTop.js","components/SiteTitle.js","AppRouter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","UserContext","React","createContext","UserProvider","Provider","UserConsumer","Consumer","Loading","props","message","className","charAt","toUpperCase","slice","PhotoEditor","photos","map","photo","length","key","src","alt","editingBlocked","to","onClick","deletePhoto","title","LogForm","handleInputChange","event","target","files","setState","file","name","value","apiEditLog","a","preventDefault","loading","url","log","process","id","formDatums","FormData","document","getElementById","append","moment","Date","now","format","state","console","x","axios","post","result","status","data","fullLog","newLogEntry","user","updateUserState","history","push","slug","Error","error","dir","table","alert","toggleDeleteButton","showDeleteButton","deleteLogEntry","updatedLog","filter","entry","pathname","_id","alignViewToElement","scrollIntoView","block","inline","behavior","shortDescription","longDescription","dateStarted","dateCompleted","dateEntered","dateDue","mileageDue","odometer","tools","parts","partsCost","laborCost","serviceLocation","receipts","vehicle","api","this","selectedVehicles","undefined","vehicles","substring","onSubmit","method","encType","multiple","htmlFor","type","autoFocus","onChange","onFocus","required","defaultValue","model","year","make","min","step","autoComplete","spellCheck","accept","Component","Add","useHistory","Edit","useParams","ForgotPassword","useState","formDisplayed","toggleFormDisplay","setLoading","inputRef","createRef","current","setTimeout","placeholder","email","ref","login","password","response","userID","primaryVehicleArray","car","primary","register","passwordConfirm","resetPassword","token","getLogData","get","addVehicle","updateVehicle","updateUserAccount","userObject","Object","keys","defaults","withCredentials","manufacturers","Login","handleLogin","statusText","messages","Register","handleRegister","ThemeSwitcher","documentElement","currentTheme","changeTheme","newTheme","localStorage","setItem","GuestHome","useContext","useEffect","preferredTheme","getItem","Home","LogIcon","role","aria-label","fallback","description","AddIcon","TodoIcon","SearchIcon","SettingsIcon","VehiclesSelector","allVehicles","checked","vehiclesShowing","includes","changeVehiclesShowing","LogEntry","fromNow","Number","toLocaleString","LogSorter","sortBy","arrow","childNodes","tempLogArray","valueOf","sort","first","second","classList","remove","add","updatedUser","localeCompare","e","Log","entriesShowing","changeEntriesShowing","veh","forEach","ent","logEntry","clickedOnVehicleId","vehicleUpdates","vehicleId","logUpdates","NotFound","PasswordReset","checkValidity","handleReset","SearchResults","results","index","SearchBox","getInfo","query","searching","counter","blurCleanup","clearInput","buttonImg","MagnifyingGlassIcon","onKeyUp","onBlur","homepage","Search","Logout","showLogoutButton","toggleShowLogoutButton","apiLogout","sessionID","cookies","err","AccountSettings","saveAccountChanges","userUpdates","updates","VLVin","vin","vinSearch","stopPropagation","fetch","json","rawMake","toLowerCase","resultsError","saveNewVehicle","VLManual","owner","editing","saveVehicleChanges","VLYMM","handleSelectChange","lookupModelsByYearAndMake","models","showConfirmButton","getFullYear","localStorageKey","toString","localStorageModels","localStorageModelsArray","split","then","b","modelsArray","prevState","catch","thisYear","Array","from","item","i","disabled","val","idx","VehicleSettings","vehicleLookupsShowing","showVehicleLookups","manualLookupShowing","showManualLookup","vinLookupShowing","showVinLookup","yearMakeModelLookupShowing","showYearMakeModelLookup","vehiclesEditing","changeVehicleEditStatus","transform","vehicleLookupChanger","view","newLogVehicleArrays","newUser","deleteVehicle","newVehicleList","currentVehicle","Settings","SingleLogEntry","vehicleID","_vehicle","EditPencil","Todo","Nav","exact","activeClassName","ProtectedRoute","isLoggedIn","children","ScrollToTop","useLocation","window","scrollTo","SiteTitle","AppRouter","path","App","context","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.577936f8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.fb5ad7c7.svg\";","module.exports = __webpack_public_path__ + \"static/media/addLog.a918556d.svg\";","module.exports = __webpack_public_path__ + \"static/media/todo.91e3307a.svg\";","module.exports = __webpack_public_path__ + \"static/media/account.e5a41a1f.svg\";","module.exports = __webpack_public_path__ + \"static/media/log.0476682c.svg\";","module.exports = __webpack_public_path__ + \"static/media/magnifying.369e264b.svg\";","module.exports = __webpack_public_path__ + \"static/media/editPencil.bd86eac2.svg\";","module.exports = __webpack_public_path__ + \"static/media/home.d6ad0c97.svg\";","import React from 'react'\n\nconst UserContext = React.createContext()\n\nexport const UserProvider = UserContext.Provider\nexport const UserConsumer = UserContext.Consumer\n\nexport default UserContext","import React from 'react'\nimport PropTypes from 'prop-types'\n// import { CSSTransition } from 'react-transition-group'\n\nimport '../styles/loading.css'\n\nfunction Loading(props) {\n  if (!props || !props.message) return null\n\n  return (\n    <div className=\"loading\">{props.message.charAt(0).toUpperCase() + props.message.slice(1)}</div>\n  )\n}\n\nLoading.propTypes = {\n  message: PropTypes.string.isRequired\n}\n\nexport default Loading","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport '../styles/photoEditor.css'\n\nfunction PhotoEditor(props) {\n  return (\n    <>\n      <h3 className=\"photos__header\">Photos</h3>\n      <div className=\"photos__div\">\n        { props.photos.map(photo => {\n          if (photo === \"\" || photo.length === 0) return null\n          return (\n            <div key={photo} className=\"single__photo__div\">\n              <img className=\"single__photo\" src={`http://res.cloudinary.com/c00p/image/upload/${photo}`} alt={photo} />\n              { !props.editingBlocked && <Link className=\"button delete__photo\" to={`/delete/photo/${photo}`} onClick={props.deletePhoto} title=\"Delete This Photo\">Delete Photo</Link> }\n            </div>\n          )\n        }\n        )}\n      </div>\n    </>\n  )\n}\n\nPhotoEditor.propTypes = {\n  photos: PropTypes.array.isRequired,\n  editingBlocked: PropTypes.bool,\n  deletePhoto: PropTypes.func // called from SingleLogEntry is read-only, called from LogForm via Edit Page this func is passed\n}\n\nexport default PhotoEditor","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\nimport axios from 'axios'\n\nimport Loading from '../Loading'\nimport PhotoEditor from '../PhotoEditor' \n// axios.defaults.withCredentials = true\n\nclass LogForm extends React.Component {\n  constructor(props) {\n    super(props) \n    this.state = {\n      id: '', \n      shortDescription: '',  \n      longDescription: '', \n      dateStarted: '', \n      dateCompleted: '', \n      dateEntered: '', \n      dateDue: '', \n      file: '',\n      mileageDue: '', \n      name: '', \n      odometer: '', \n      tools: '', \n      parts: '', \n      partsCost: '', \n      laborCost: '', \n      serviceLocation: '', \n      photos: [], \n      receipts: '',\n      vehicle: '', // String vehicle ID associated with this log entry\n      showDeleteButton: false,\n      loading: true,\n      api: true\n    }\n  }\n\n  handleInputChange = event => {\n    // when a file is selected for upload...\n    if (event.target.files) return this.setState({ file: event.target.files[0] })\n    // otherwise track changes in form data to state\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  apiEditLog = async event => {\n    // console.log('apiEditLog func...')\n    event.preventDefault()\n    this.setState({ loading: true })\n    let url = ''\n    // can post new and edit existing log entries via this form\n    if (this.props && this.props.log) {\n      url = `${process.env.REACT_APP_API_DOMAIN}/add/${this.props.log.id}`\n    } else {\n      url = `${process.env.REACT_APP_API_DOMAIN}/add`\n    }\n\n    const formDatums = new FormData(document.getElementById('logForm'))\n    formDatums.append(\"dateEntered\", moment(Date.now()).format('YYYY-MM-DD'))\n    formDatums.append(\"api\", true)\n    if (this.props.log && this.props.log.photos && this.props.log.photos.length > 0) {\n      formDatums.append(\"photos\", this.props.log.photos)\n    } else {\n      formDatums.append(\"photos\", [])\n    }\n    if (this.state.id) formDatums.append(\"id\", this.state.id)\n    console.log('FORM DATA before posting:')\n    for (let x of formDatums) console.log(formDatums[x],x)\n\n    try {\n      const result = await axios.post(url, formDatums)\n      console.log('result received')\n      console.log(result)\n      if (result.status === 200) {\n        const log = result.data.fullLog\n        const newLogEntry = result.data.newLogEntry\n        const user = this.props.user\n        user.log = log\n        this.props.updateUserState(user)\n        this.props.history.push(`/log/${newLogEntry.slug}`)\n      } else {\n        console.log('Response received but with status code: '+result.status)\n        const error = new Error(result.error)\n        throw error\n      }\n    } catch(error) {\n      console.log('Error with LogForm. Unable to add/edit Log Entry. Please try again later.')\n      console.dir(error)\n      console.log(error)\n      console.table(error)\n      this.setState({ loading: false })\n      alert(error)\n      // TODO redirect? try again?\n    }\n  }\n\n  toggleDeleteButton = async () => {\n    this.setState({ showDeleteButton: !this.state.showDeleteButton })\n  }\n\n  deleteLogEntry = async event => {\n    event.preventDefault()\n    await this.setState({ loading: true })\n    try {\n      const result = await axios.post(`${process.env.REACT_APP_API_DOMAIN}/delete/log/entry/${this.state.id}`)\n      if (result.data === null) {\n        console.log('Server unable to find specified log entry. Was it already deleted?')\n        await this.setState({ loading: false })\n      } else if (result.status === 200) {\n        // update State to remove the deleted entry\n        const updatedLog = this.props.user.log.filter(entry => entry.id !== this.state.id)\n        const user = this.props.user\n        user.log = updatedLog\n        await this.props.updateUserState(user)\n        // redirect back to the log page\n        this.props.history.push('/log')\n      }\n    } catch(err) {\n      console.error(err)\n      await this.setState({ loading: false })\n    }\n  }\n\n  deletePhoto = async event => {\n    event.preventDefault()\n    // await this.setState({ loading: true })\n    // backend DOMAIN is localhost or hosted (with no trailing slash)\n    // event.target.pathname: /delete/photo/:photo-filename (with a leading slash)\n    // backend expects: DOMAIN/delete/photo/:photo-filename\n    const url = `${process.env.REACT_APP_API_DOMAIN}${event.target.pathname}`\n    // console.log('Deleting photo via: '+url)\n    try {\n      const result = await axios.post(url)\n      // console.log('Result from delete photo call:')\n      // console.dir(result)\n      if (result.data === null) {\n        console.log('Server unable to find specified photo to delete. Was it already deleted?')\n        // await this.setState({ loading: false })\n      } else if (result.status === 200) {\n        // update State to remove the deleted entry\n        const user = this.props.user\n        user.log = result.data\n        this.props.updateUserState(user)\n        this.props.history.push(`/log/${this.props.log._id}/edit`)\n        // await this.setState({ loading: false })\n      }\n    } catch(err) {\n      // await this.setState({ loading: false })\n      alert('Problem deleting photo. Please try again.')\n      console.error(err)\n    }\n  }\n\n  componentDidMount() {\n    if (!this.props) return this.setState({ loading: false })\n    if (!this.props.log) return this.setState({ loading: false })\n\n    // console.log('Editing extant Log entry. Initializing state. ')\n    let dateStarted = ''\n    let dateCompleted = ''\n    let dateEntered = ''\n    let dateDue = ''\n    // convert mongodb timestamp to something usable by an html input of type=date, \n    // eg: 2018-01-30T00:00:00.000Z => 2018-01-30\n    if (this.props.log.dateStarted) dateStarted = moment(this.props.log.dateStarted).format('YYYY-MM-DD')\n    if (this.props.log.dateCompleted) dateCompleted = moment(this.props.log.dateCompleted).format('YYYY-MM-DD')\n    if (this.props.log.dateEntered) dateEntered = moment(this.props.log.dateEntered).format('YYYY-MM-DD')\n    if (this.props.log.dateDue) dateDue = moment(this.props.log.dateDue).format('YYYY-MM-DD')\n\n    this.setState({\n      id: this.props.log.id, \n      shortDescription: this.props.log.shortDescription, \n      longDescription: this.props.log.longDescription, \n      dateStarted: dateStarted, \n      dateCompleted: dateCompleted, \n      dateEntered: dateEntered, \n      dateDue: dateDue, \n      mileageDue: this.props.log.mileageDue || '', \n      name: this.props.log.name, \n      odometer: this.props.log.odometer, \n      tools: this.props.log.tools, \n      parts: this.props.log.parts, \n      partsCost: this.props.log.partsCost, \n      laborCost: this.props.log.laborCost, \n      serviceLocation: this.props.log.serviceLocation, \n      receipts: this.props.log.receipts,\n      vehicle: this.props.log.vehicle, \n      selectedVehicles: (this.props.user.selectedVehicles && this.props.user.selectedVehicles.length > 0 && this.props.user.selectedVehicles[0] !== undefined && this.props.user.selectedVehicles) || this.props.user.vehicles,\n      loading: false\n    })\n  }\n\n  alignViewToElement = event => {\n    event.preventDefault()\n    event.target.scrollIntoView({block: \"center\", inline: \"nearest\", behavior: \"smooth\" })\n  }\n\n  render() {\n    if (this.state.loading) return <Loading message=\"Formatting and Saving Log Changes...\" />\n\n    if (!this.props.user.vehicles || this.props.user.vehicles.length < 1 || (this.props.user.vehicles.length > 0 && this.props.user.vehicles[0] === undefined)) {\n      return (\n        <div className=\"inner\">\n          <h2>No Vehicle Associated With This Account</h2>\n          <div className=\"card no__vehicle warning\">\n            <span>Before entering a service record, please: </span>\n            <Link to=\"/settings\" className=\"button\">Click Here To Add A Vehicle To Your Account</Link>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"inner\">\n          <h2>\n            {this.state.id ? \n              <span>Editing \n                <Link to={`/log/${this.props.log.slug}`}> \n                  {this.state.name.length > 120 ? ` ${this.state.name.substring(0,120)}... ` : ` ${this.state.name} ` }\n                </Link>\n              </span>\n              :\n              `Add New Log Entry`}\n          </h2>\n\n          <div className=\"card padded\">\n            <form className=\"form\" id=\"logForm\" onSubmit={this.apiEditLog} method=\"POST\" encType=\"multipart/form-data\" multiple=\"multiple\">\n              <label htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" autoFocus value={this.state.name} onChange={this.handleInputChange} onFocus={this.alignViewToElement} />\n              <label htmlFor=\"vehicle\">Vehicle</label>\n              <select \n                id=\"vehicle\" \n                name=\"vehicle\" \n                required=\"required\" \n                defaultValue=\"Please select a vehicle...\"\n                onChange={this.handleInputChange} >\n                { this.props.user.vehicles && this.props.user.vehicles.length > 0 &&\n                  this.props.user.vehicles.map(model => <option key={model._id} value={model._id}>{`${model.year} ${model.make} ${model.model}`}</option>)\n                }\n              </select>\n              <label htmlFor=\"dateStarted\">Date Started</label>\n              <input type=\"date\" name=\"dateStarted\" value={this.state.dateStarted} onChange={this.handleInputChange} onFocus={this.alignViewToElement} />\n              <label htmlFor=\"dateCompleted\">Date Completed</label>\n              <input type=\"date\" name=\"dateCompleted\" value={this.state.dateCompleted} onChange={this.handleInputChange} onFocus={this.alignViewToElement} />\n              <label htmlFor=\"dateDue\">On what date will this item need to be completed next?</label>\n              <input type=\"date\" name=\"dateDue\" value={this.state.dateDue} onChange={this.handleInputChange} onFocus={this.alignViewToElement} />\n              <label htmlFor=\"mileageDue\">At what mileage will this item need to be completed next?</label>\n              <input type=\"number\" name=\"mileageDue\" min=\"0\" step=\"1\" value={this.state.mileageDue} onChange={this.handleInputChange} onFocus={this.alignViewToElement} />\n              <label htmlFor=\"shortDescription\">Short Description</label>\n              <textarea name=\"shortDescription\" autoComplete=\"on\" spellCheck=\"true\" value={this.state.shortDescription} onChange={this.handleInputChange} onFocus={this.alignViewToElement} ></textarea>\n              <label htmlFor=\"longDescription\">Long Description</label>\n              <textarea name=\"longDescription\" autoComplete=\"on\" spellCheck=\"true\" value={this.state.longDescription} onChange={this.handleInputChange} onFocus={this.alignViewToElement} ></textarea>\n              <label htmlFor=\"tools\">Tools</label>\n              <input type=\"text\" name=\"tools\" value={this.state.tools} onChange={this.handleInputChange} onFocus={this.alignViewToElement} />\n              <label htmlFor=\"parts\">Parts</label>\n              <input type=\"text\" name=\"parts\" value={this.state.parts} onChange={this.handleInputChange} onFocus={this.alignViewToElement} />\n              <label htmlFor=\"partsCost\">Cost of Parts</label>\n                <span className=\"moneySign\">$\n                  <input className=\"moneyInput\" type=\"number\" name=\"partsCost\" min=\"0\" step=\"0.01\" value={this.state.partsCost} onChange={this.handleInputChange} onFocus={this.alignViewToElement} />\n                </span>\n              <label htmlFor=\"laborCost\">Cost of Labor</label>\n              <span className=\"moneySign\">$\n                <input className=\"moneyInput\" type=\"text\" name=\"laborCost\" min=\"0\" step=\"0.01\" value={this.state.laborCost} onChange={this.handleInputChange} onFocus={this.alignViewToElement} />\n              </span>\n              <label htmlFor=\"serviceLocation\">Service Location (Name and Address of Mechanic or Self)</label>\n              <input type=\"text\" name=\"serviceLocation\" value={this.state.serviceLocation} onChange={this.handleInputChange} onFocus={this.alignViewToElement} />\n              <label htmlFor=\"odometer\">Odometer</label>\n              <input type=\"number\" name=\"odometer\" min=\"0\" value={this.state.odometer} onChange={this.handleInputChange} onFocus={this.alignViewToElement} />\n\n              <label htmlFor=\"file\">Upload other images\n                <input type=\"file\" name=\"file\" accept=\"image/gif, image/png, image/jpeg\" onChange={this.handleInputChange} />\n              </label>\n\n              <input className=\"button submit\" type=\"submit\" value=\"Save Log\" />\n            </form>\n\n            { this.props.log && this.props.log.photos && this.props.log.photos.length > 0 && <PhotoEditor photos={this.props.log.photos} deletePhoto={this.deletePhoto} /> }\n\n            { this.state.id &&\n              <>\n              <button className=\"button delete__log__entry\" onClick={this.toggleDeleteButton} title=\"Delete Log Entry\">Delete Log Entry</button>\n              { this.state.showDeleteButton &&\n                <button className=\"button delete__log__entry__confirm\" onClick={this.deleteLogEntry} title=\"Permanently Delete Log Entry\">Permanently Delete Log Entry</button>\n              }\n              </>\n            }\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\nLogForm.propTypes = {\n  log: PropTypes.object, // optional: extant log to edit can be passed otherwise blank new log form\n  user: PropTypes.shape({\n    cookies: PropTypes.string,\n    email: PropTypes.string,\n    log: PropTypes.array,\n    name: PropTypes.string,\n    sessionID: PropTypes.string,\n    userID: PropTypes.string,\n    vehicles: PropTypes.array,\n    selectedVehicles: PropTypes.array\n  }),\n  updateUserState: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired\n}\n\nexport default LogForm","import React from 'react'\nimport PropTypes from 'prop-types'\nimport LogForm from '../components/log/LogForm'\nimport { useHistory } from 'react-router-dom'\n\nfunction Add(props) {\n  const history = useHistory()\n  return <LogForm {...props} history={history} />\n}\n\nAdd.propTypes = {\n  user: PropTypes.shape({\n    cookies: PropTypes.string,\n    email: PropTypes.string,\n    log: PropTypes.array,\n    name: PropTypes.string,\n    sessionID: PropTypes.string,\n    userID: PropTypes.string,\n    vehicles: PropTypes.array,\n    selectedVehicles: PropTypes.array \n  }),\n  updateUserState: PropTypes.func.isRequired\n}\n\nexport default Add","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useHistory, useParams } from 'react-router-dom'\n\nimport LogForm from '../components/log/LogForm'\n\nfunction Edit(props) {\n  const history = useHistory()\n  const { id } = useParams()\n  // find the log entry that matches the ID from the URL parameter...\n  const log = props.user.log.filter(entry => entry.id === id)\n  return <LogForm {...props} log={log[0]} history={history} />\n}\n\nEdit.propTypes = {\n  user: PropTypes.shape({\n    cookies: PropTypes.string,\n    email: PropTypes.string,\n    log: PropTypes.array,\n    name: PropTypes.string,\n    sessionID: PropTypes.string,\n    userID: PropTypes.string,\n    vehicles: PropTypes.array,\n    selectedVehicles: PropTypes.array\n  }),\n  updateUserState: PropTypes.func.isRequired\n}\n\nexport default Edit\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport Loading from '../Loading'\nimport '../../styles/forgotPassword.css'\n\nfunction ForgotPassword(props) {\n  const [formDisplayed, toggleFormDisplay] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const inputRef = React.createRef()\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    console.log('Forgot password form submitted.')\n    console.log(inputRef.current.value)\n    // console.dir(event)\n    setLoading(true)\n    alert('Password resets are not currently enabled. Apologies.')\n    // TODO - import helper to reach /forgot api... \n    setTimeout(() => {\n      setLoading(false)\n    }, 500)\n  }\n\n  if (loading) return <Loading message=\"Sending password reset email...\" />\n  if (!formDisplayed) return <div className=\"padded\"><button className=\"button\" onClick={() => toggleFormDisplay(true)}>Forgot Your Password?</button></div> \n\n  if (formDisplayed) return ( \n    <div className=\"forgot__password__container padded\">\n      <button className=\"button close__button\" onClick={() => toggleFormDisplay(false)}>&times;</button> \n      <h3>I forgot my password!</h3>\n      <form onSubmit={handleSubmit} method=\"POST\">\n        <label htmlFor=\"email\">Email Address</label>\n        <input type=\"email\" name=\"email\" placeholder=\"Enter email...\" defaultValue={props.email} ref={inputRef} />\n        <input className=\"button\" type=\"submit\" value=\"Send a Reset\" />\n      </form>\n    </div>\n  )\n}\n\nForgotPassword.propTypes = {\n  email: PropTypes.string.isRequired\n}\n\nexport default ForgotPassword\n","import axios from 'axios'\naxios.defaults.withCredentials = true\n\n// Authenticates a user via email+password\n// Upon success: returns a User object and \n// appends server session ID and cookie info to future requests\nexport async function login(email, password) {\n  if (!email || !password) return new Error('No email or password provided to Login.')\n  try {\n    const response = await axios.post(`${process.env.REACT_APP_API_DOMAIN}/api/login`, { email, password })\n    if (response.status === 200) {\n      const user = response.data\n      user.userID = response.data._id\n      // object property \"primary\" is a boolean indicating if it is the default/main vehicle to display\n      const primaryVehicleArray = user.vehicles.filter(car => car.primary)\n      if (primaryVehicleArray.length === 0) {\n        user.selectedVehicles = [user.vehicles[0]] // if none is primary, display the first vehicle by default\n      } else {\n        user.selectedVehicles = primaryVehicleArray\n      }\n      return { user } \n    } else {\n      console.log('Response received but with status code: '+response.status)\n      const error = new Error(response.error)\n      throw error\n    }\n  } \n  catch(loginError) {\n    console.log(`Error posting to ${process.env.REACT_APP_API_DOMAIN}/api/login`)\n    console.dir(loginError)\n    return loginError\n  }\n}\n\n// Register a new user account\n// Returns user and session data (id, cookie) for a newly-created account\nexport async function register(name, email, password, passwordConfirm) {\n  if (!name || !email || !password || !passwordConfirm) return new Error('Not all registration information provided. Please make sure you have entered a username, email address, password, and confirmed your password before trying again.')\n  const url = `${process.env.REACT_APP_API_DOMAIN}/api/register`\n  try {\n    const response = await axios.post(url, { name, email, password, passwordConfirm })\n    if (response.status === 200) {\n      const user = response.data\n      user.userID = response.data._id\n      user.selectedVehicles = []\n      user.vehicles = []\n      user.log = []\n      return { user }\n    } else {\n      console.log('Registration response received from the server but with an error and status code: '+response.status)\n      const error = new Error(response.error)\n      throw error\n    }\n  } \n  catch(registrationError) {\n    console.log(`Error posting to ${process.env.REACT_APP_API_DOMAIN}/api/register`)\n    console.log(registrationError.response.status)\n    return registrationError\n  }\n}\n\nexport async function resetPassword(token, password, passwordConfirm) {\n  try {\n    const response = await axios.post(`${process.env.REACT_APP_API_DOMAIN}/account/reset/${token}`, { token, password, passwordConfirm })\n    if (response.status === 200) return getLogData()\n    console.log('Response received but with status code: '+response.status)\n    const error = new Error(response.error)\n    throw error\n  } catch(err) {\n    console.log('Error posting to /account/reset.')\n    console.dir(err)\n    // TODO error boundary - return false\n    return alert('Error resetting account password. Please try again.')\n  }\n}\n\n// Gets all log and vehicle info for the logged-in user\n// Returns a User's Log and Vehicle arrays\nexport async function getLogData() {\n  // console.log('Getting new log data...')\n  try {\n    const response = await axios.get(`${process.env.REACT_APP_API_DOMAIN}/api/log`)\n    console.log('getLogData returned: ')\n    console.dir(response)\n    if (response.status === 200) return response.data\n    // otherwise ERROR\n    console.log('Response received but with status code: '+response.status)\n    const error = new Error(response.error)\n    throw error\n  } catch (err) {\n      console.log('Error getting data from /api/log/')\n      console.dir(err)\n      alert('Error getting log data please try again')\n    }\n}\n\n// Save a new Vehicle and associate this with the logged-in user\n// If successful, calls getLogData and returns the updated Log/Vehicle arrays\nexport async function addVehicle(vehicle) {\n  try {\n    const response = await axios.post(`${process.env.REACT_APP_API_DOMAIN}/api/vehicle/add`, vehicle)\n    if (response.status === 200) return getLogData()\n    console.log('Response received but with status code: '+response.status)\n    const error = new Error(response.error)\n    throw error\n  } catch(err) {\n    console.log('Error posting to /api/vehicle/add.')\n    console.dir(err)\n    // TODO error boundary - return false\n    return alert('Error adding new vehicle. Please try again.')\n  }\n}\n\n// saveVehicleChanges, post route = /api/vehicle\nexport async function updateVehicle(vehicle) {\n  console.log(\"Updating an extant vehicle: \")\n  console.dir(vehicle)\n  try {\n    const response = await axios.post(`${process.env.REACT_APP_API_DOMAIN}/api/vehicle`, vehicle)\n    if (response.status === 200) return getLogData()\n    console.log('Response received but with status code: '+response.status)\n    const error = new Error(response.error)\n    throw error\n  } catch(err) {\n    console.log('Error posting to /api/vehicle.')\n    console.dir(err)\n    // TODO error boundary - return false\n    return alert('Error updating vehicle. Please try again.')\n  }\n}\n\n// Sends account changes (user name, email address, password) to the back end\n// If successful, calls getLogData and returns the updated Log/Vehicle arrays\nexport async function updateUserAccount(userObject) {\n  if (!userObject || Object.keys(userObject).length === 0) return null\n  const { name, email } = userObject\n  try {\n    const response = await axios.post(`${process.env.REACT_APP_API_DOMAIN}/api/account`, { name, email })\n    if (response.status === 200) return getLogData()\n    // otherwise ERROR\n    console.log('Response received but with status code: '+response.status)\n    const error = new Error(response.error)\n    throw error\n  } catch(err) {\n      console.log('Error posting to /api/account.')\n      console.dir(err)\n      // TODO error boundary\n      return alert('Error updating account. Please try again.')\n    }\n}\n\n//\nexport const manufacturers = [\n  \"ACG\",\n  \"Aston Martin\",\n  \"Blue\",\n  \"BMW\",\n  \"Buell\",\n  \"Bugatti\",\n  \"Chevrolet\",\n  \"Chrysler\",\n  \"Coachworks\",\n  \"Cooper\",\n  \"Daimler\",\n  \"E-One\",\n  \"Fiat\",\n  \"Ford\",\n  \"GM\",\n  \"Hino\",\n  \"Hombilt\",\n  \"Honda\",\n  \"Hyundai\",\n  \"International\",\n  \"Jaguar\",\n  \"Jialing\",\n  \"Kenworth\",\n  \"Kia\",\n  \"Lamborghini\",\n  \"Land Rover\",\n  \"Latitude\",\n  \"Lotus\",\n  \"Mack\",\n  \"Maserati\",\n  \"Mazda\",\n  \"Mercedes-Benz\",\n  \"Mills\",\n  \"Mitsubishi\",\n  \"NABI\",\n  \"Navistar\",\n  \"Nissan\",\n  \"NUMMI\",\n  \"Optima\",\n  \"Oshkosh\",\n  \"Owosso\",\n  \"PACCAR\",\n  \"Peterbilt\",\n  \"Peugot\",\n  \"Quest\",\n  \"Renault\",\n  \"Rolls Royce\",\n  \"Subaru\",\n  \"Suzuki\",\n  \"Tesla\",\n  \"Toyota\",\n  \"Volkswagen\",\n  \"Volvo\"\n]\n\n// BACKEND API-APP SHARED ROUTES\n// POST\n  // /add \n  // /add/:id \n  // /delete/log/entry/:id\n  // /remove/photo/:filename \n  // /account/forgot \n  // /account/reset/:token \n\n// API ONLY ROUTES\n// GET\n  // /api/search       --> cleanly handled by SearchBox component\n  // /api/log          --> not used anywhere... (login and account updates return {User+Vehicle})\n// POST\n  // /api/logout       --> DONE - Handled by Logout component\n  // /api/login        --> DONE \n  // /api/register     --> DONE (TODO cleanup expectations of children wrt. new user flow i.e. need vehicle asap)\n  // /api/vehicle/add  --> DONE (TODO error boundaries)\n  // /api/vehicle      --> DONE (TODO error boundaries)\n  // /api/account      --> DONE\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { useHistory } from 'react-router-dom'\n\nimport ForgotPassword from './ForgotPassword'\nimport Loading from '../Loading'\nimport { login } from '../../helpers'\nimport '../../styles/login.css'\n\nfunction Login(props) {\n  const history = useHistory()\n  const [state, setState] = useState({\n    email: '',\n    password: ''\n  })\n  const [loading, setLoading] = useState(false)\n\n  const handleInputChange = event => {\n    const { value, name } = event.target\n    setState({\n      ...state,\n      [name]: value\n    })\n  }\n\n  const handleLogin = async event => {\n    event.preventDefault()\n    const { email, password } = state\n    setLoading(true)\n    // login func already wrapped in a try/catch. returns an error in result[response] if there is a failure\n    const result = await login(email, password)\n    if (!result || result.response !== undefined) {\n      setLoading(false)\n      return alert(`Error logging in. Please try again. Status ${result.response.status}: ${result.response.statusText}.`)\n    }\n    const { user } = result\n    console.log('Server returned user:')\n    console.log(user)\n\n    if (Object.keys(user).length === 0) {\n      return alert('Server could not locate that user. Please try again.')\n    }\n    if (!user.selectedVehicles || user.selectedVehicles === undefined) user.selectedVehicles = []\n    await props.updateUserState(user)\n    setLoading(false)\n    console.log('Loading set to false in Login component. Pushing history to /')\n    return history.push('/')\n  }\n\n  if (loading) return <Loading message=\"Logging in...\" messages={[\"Logging in...\"] } /> \n\n  return (\n    <div className=\"card\">\n      <h3>Login</h3>\n      <form className=\"padded\" onSubmit={handleLogin} method=\"POST\">\n        <label htmlFor=\"email\">Email Address</label>\n        <input type=\"email\" name=\"email\" placeholder=\"Enter email...\" value={state.email || ''} onChange={handleInputChange} />\n        <label htmlFor=\"password\">Password</label>\n        <input type=\"password\" name=\"password\" placeholder=\"Enter password...\" value={state.password || ''} onChange={handleInputChange} />\n        <input className=\"button\" type=\"submit\" value=\"Log In →\" />\n      </form>\n\n      <ForgotPassword email={state.email || ''} /> \n    </div>\n  )\n}\n\nLogin.propTypes = {\n  updateUserState: PropTypes.func.isRequired\n}\n\nexport default Login\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { useHistory } from 'react-router-dom'\n\nimport { register } from '../../helpers'\nimport Loading from '../Loading'\n\nfunction Register(props) {\n  const history = useHistory()\n\n  const [state, setState] = useState({\n    name: '',\n    email: '',\n    password: '',\n    passwordConfirm: ''\n  })\n  const [loading, setLoading] = useState(false)\n\n  const handleInputChange = event => {\n    setState({\n      ...state,\n      [event.target.name]: event.target.value\n    })\n  }\n\n  const handleRegister = async event => {\n    event.preventDefault()\n    console.log(state)\n    const { name, email, password, passwordConfirm } = state\n    setLoading(true)\n    console.log('Loading. Sending to register: ')\n    console.log(name, email, password, passwordConfirm)\n    const result = await register(name, email, password, passwordConfirm)\n    if (!result || result.response !== undefined) {\n      setLoading(false)\n      return alert(`Error registering a new account. Please try again. Status ${result.response.status}: ${result.response.statusText}.`)\n    }\n    if (Object.keys(result.user).length === 0) {\n      setLoading(false)\n      return alert('Server was unable to register you at this time. Please try again.')\n    }\n    await props.updateUserState(result.user)\n    history.push('/')\n  }\n\n  if (loading) return <Loading message=\"Registering New User...\" />\n\n  return (\n    <div className=\"card\">\n      <h3>Register</h3>\n      <form className=\"padded\" onSubmit={handleRegister} method=\"POST\" encType=\"multipart/form-data\" multiple=\"multiple\">\n        <label htmlFor=\"name\">Name</label>\n        <input type=\"text\" name=\"name\" placeholder=\"Enter name...\" value={state.name || ''} onChange={handleInputChange} />\n        <label htmlFor=\"email\">Email Address</label>\n        <input type=\"email\" name=\"email\" placeholder=\"Enter email...\" value={state.email || ''} onChange={handleInputChange} />\n        <label htmlFor=\"password\">Password</label>\n        <input type=\"password\" name=\"password\" placeholder=\"Enter password...\" value={state.password || ''} onChange={handleInputChange} />\n        <label htmlFor=\"passwordConfirm\">Confirm Password</label>\n        <input type=\"password\" name=\"passwordConfirm\" placeholder=\"Confirm password...\" value={state.passwordConfirm || ''} onChange={handleInputChange} />\n        <input className=\"button\" type=\"submit\" value=\"Register →\" />\n      </form>\n    </div>\n  )\n}\n\nRegister.propTypes = {\n  updateUserState: PropTypes.func.isRequired\n}\n\nexport default Register\n","import React, { useState } from 'react'\n\nfunction ThemeSwitcher() {\n  const [currentTheme, changeTheme] = useState(document.documentElement.className || 'dark')\n\n  function toggleTheme(event) {\n    event.preventDefault()\n    const newTheme = currentTheme === 'dark' ? 'light' : 'dark'\n    localStorage.setItem('theme', newTheme)\n    document.documentElement.className = newTheme\n    changeTheme(newTheme) \n  }\n\n  return (\n    <div className=\"card\">\n      <h3>Theme Settings</h3>\n      <div className=\"theme__container padded\">\n        <label htmlFor=\"theme\" className=\"\" >{`${currentTheme.substring(0,1).toUpperCase()}${currentTheme.substring(1)} Mode Enabled`}</label>\n        <button className=\"button\" onClick={toggleTheme}>Switch Theme</button>\n      </div>\n    </div>\n  )\n}\n\nexport default ThemeSwitcher","import React, { useEffect, useContext } from 'react'\nimport UserContext from '../contexts/UserContext'\nimport Login from '../components/account/Login'\nimport Register from '../components/account/Register'\nimport ThemeSwitcher from '../components/account/ThemeSwitcher'\n\nimport '../styles/guestHome.css'\n\nfunction GuestHome(props) {\n  const {user, updateUserState} = useContext(UserContext)\n  \n  useEffect(() => {\n    const preferredTheme = localStorage.getItem('theme') || 'dark'\n    // const savedUser = JSON.parse(localStorage.getItem('maint_log_user'))\n    // pass the saved data to the Login component\n    // if (savedUser !== null) { \n    // }\n    document.documentElement.className = preferredTheme\n  }, []) // empty [] will cause this to only run once on initial render\n\n  return (\n    <div className=\"inner\">\n      <div className=\"welcome__guest__container\">\n        <section className=\"welcome__guest__hero\">\n          <h3>Keep track of the service history of your vehicles.</h3>\n          <ul>\n            <li>Record what was done, when, by whom, and where.</li>\n            <li>Include photos of before and after the service, parts used, and receipts.</li>\n            <li>Write short and long descriptions of work done.</li>\n            <li>Recurring services can be scheduled for a future due date or mileage.</li>\n          </ul>\n        </section>\n        <p><strong>Returning user? </strong>Please login to access your log.</p>\n        <Login user={user} updateUserState={updateUserState} history={props.history} />\n        <p><strong>New user? </strong>Register an account & start tracking your vehicle maintenance.</p>\n        <Register user={user} updateUserState={updateUserState} history={props.history} />\n        <ThemeSwitcher />\n      </div> \n    </div>\n  )\n}\n\nexport default GuestHome","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { ReactSVG } from 'react-svg'\nimport PropTypes from 'prop-types'\n\nimport SearchIcon from '../images/search.svg'\nimport AddIcon from '../images/addLog.svg'\nimport TodoIcon from '../images/todo.svg'\nimport SettingsIcon from '../images/account.svg'\nimport LogIcon from '../images/log.svg'\n\nimport '../styles/home.css'\n\nfunction Home(props) {\n  console.log('Home page rendering with props:')\n  console.dir(props)\n  \n  return (\n    <div className=\"inner\">\n      <div className=\"home__actions__container\">\n        <Link className=\"button card home__actions history\" to=\"/log\">\n          <ReactSVG src={LogIcon} role=\"img\" aria-label=\"Log Icon\" fallback={() => <img src={LogIcon} alt=\"log icon\" description=\"log icon\" className=\"svg\" />} /> \n          <p>View Full Maintenance Log History</p>\n        </Link>\n        <Link className=\"button card home__actions add\" to=\"/add\">\n          <ReactSVG src={AddIcon} role=\"img\" aria-label=\"Add Icon\" fallback={() => <img src={AddIcon} alt=\"add icon\" description=\"add icon\" className=\"svg\" />} /> \n          <p>Add New Log Entry</p>\n        </Link>\n        <Link className=\"button card home__actions todo upcoming-maintenance\" to=\"/todo\">\n          <ReactSVG src={TodoIcon} role=\"img\" aria-label=\"Todo Icon\" fallback={() => <img src={TodoIcon} alt=\"todo icon\" description=\"todo icon\" className=\"svg\" />} /> \n          <p>View Upcoming Scheduled Maintenance</p>\n        </Link>\n        <Link className=\"button card home__actions search__main search\" to=\"/search\">\n          <ReactSVG src={SearchIcon} role=\"img\" aria-label=\"Search Icon\" fallback={() => <img src={SearchIcon} alt=\"search icon\" description=\"search icon\" className=\"svg\" />} /> \n          <p>Search Log Entries</p>\n        </Link>\n        <Link className=\"button card home__actions settings\" to=\"/settings\">\n          <ReactSVG src={SettingsIcon} role=\"img\" aria-label=\"Settings Icon\" fallback={() => <img src={SettingsIcon} alt=\"settings icon\" description=\"settings icon\" className=\"svg\" />} /> \n          <p>Edit Your Vehicle & Account Settings</p>\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nHome.propTypes = {\n  user: PropTypes.shape({\n    cookies: PropTypes.string,\n    email: PropTypes.string,\n    log: PropTypes.array,\n    name: PropTypes.string,\n    sessionID: PropTypes.string,\n    userID: PropTypes.string,\n    vehicle: PropTypes.array,\n    selectedVehicles: PropTypes.array\n  }),\n  updateUserState: PropTypes.func.isRequired\n}\n\nexport default Home","import React from 'react'\nimport PropTypes from 'prop-types'\nimport '../../styles/vehicle.css'\n\nfunction VehiclesSelector(props) {\n  console.log('Vehicle selector component with props: ')\n  console.dir(props)\n  return (\n    <div className=\"card vehicles__selector vehicles\">\n      <div>\n        <h4 className=\"flexy vehicles__selector__header\">\n          <span>Your Vehicles</span> \n          <span>Selected for View</span>\n        </h4>\n      </div>\n      { (!props.allVehicles || props.allVehicles.length === 0) && <span>(none)</span> }\n      { props.allVehicles && props.allVehicles.length > 0 && props.allVehicles.map(vehicle => {\n        return (\n          <div key={vehicle.id} className=\"well vehicle\">\n            <p>{vehicle.year} {vehicle.make} {vehicle.model}</p>\n            <input type=\"checkbox\" checked={props.vehiclesShowing.includes(vehicle.id)} name={vehicle.id} onChange={props.changeVehiclesShowing} /> \n          </div>\n        )\n      }) }\n    </div>\n  )\n}\n\nVehiclesSelector.propTypes = {\n  allVehicles: PropTypes.array.isRequired, // an array of all vehicle data { id, year, make model etc }\n  vehiclesShowing: PropTypes.array.isRequired, // an array[] of 0+ vehicle IDs that are currently selected for viewing\n  changeVehiclesShowing: PropTypes.func.isRequired // Log and Todo pages use this to render entries based on selected vehicles\n}\n\nexport default VehiclesSelector\n","import React from 'react'\nimport moment from 'moment'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport '../../styles/logEntry.css'\n\nfunction LogEntry(props) {\n  const log = props.data\n  if (!log) return ( <div>Error loading log data...</div> )\n\n  return (\n    <div className=\"card log__entry\">\n      <Link to={`/log/${log.slug}`}>\n        <h4>{log.name}</h4>\n      </Link>\n      <div className=\"log__details__container\">\n        <div className=\"log__details log__details__service\">\n          <p>{log.shortDescription}</p>\n          <p>{log.serviceLocation}</p>\n        </div>\n        <div className=\"log__details log__details__dates\">\n          <p>{moment(log.dateCompleted).fromNow()}</p>\n          { log.dateDue && <p>Next <span>{moment(log.dateDue).fromNow()}</span></p> }\n        </div>\n        <div className=\"log__details log__details__mileage\">\n          <p>{log.odometer && Number(log.odometer).toLocaleString()} miles</p>\n          { log.mileageDue && <p>Next <span>{Number(log.mileageDue).toLocaleString()}</span></p> }\n        </div>\n        <div className=\"log__details log__details__costs\">\n          <p>P ${log.partsCost}</p>\n          <p>L ${log.laborCost}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nLogEntry.propTypes = {\n  data: PropTypes.object.isRequired\n}\n\nexport default LogEntry","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport '../../styles/logSorter.css'\n\nfunction LogSorter(props) {\n  function sortBy(method, event) {\n    const arrow = event.target.childNodes[1]\n    // don't sort if it doesn't exist or there are 1 or 0 log entries\n    if (!props || !props.user || !props.user.log || props.user.log.length <= 1) return\n\n    if (method === 'date') {\n      let tempLogArray = []\n      // if they are in descending order\n      if ( new Date(props.user.log[0].dateCompleted).valueOf() > new Date(props.user.log[1].dateCompleted).valueOf() ) {\n        // sort log entries in ascending order\n        tempLogArray = [...props.user.log].sort((first, second) => new Date(first.dateCompleted).valueOf() - new Date(second.dateCompleted).valueOf() )\n        arrow.classList.remove('log__sorter__arrow__selected')\n      } else {\n        tempLogArray = [...props.user.log].sort((first, second) => new Date(second.dateCompleted).valueOf() - new Date(first.dateCompleted).valueOf() )\n        arrow.classList.add('log__sorter__arrow__selected')\n      }\n      let updatedUser = {...props.user}\n      updatedUser.log = tempLogArray\n      props.updateUserState(updatedUser)\n      return\n    }\n\n    if (method === 'service') {\n      let tempLogArray = []\n      // if they are not already in alphabetical order \n      if (props.user.log[0].name.localeCompare(props.user.log[1].name) > -1) {\n        // sort them\n        tempLogArray = [...props.user.log].sort((first, second) => first.name.localeCompare(second.name) )\n        arrow.classList.add('log__sorter__arrow__selected')\n      } else { // otherwise sort them in reverse alphabetical order\n        tempLogArray = [...props.user.log].sort((first, second) => second.name.localeCompare(first.name) )\n        arrow.classList.remove('log__sorter__arrow__selected')\n      }\n      let updatedUser = {...props.user}\n      updatedUser.log = tempLogArray\n      props.updateUserState(updatedUser)\n      return\n    }\n\n    if (method === 'mileage') {\n      let tempLogArray = []\n      if (Number(props.user.log[0].odometer) > Number(props.user.log[1].odometer)) {\n        tempLogArray = [...props.user.log].sort((first, second) => Number(first.odometer) <= Number(second.odometer) ? -1 : 1 )\n        arrow.classList.remove('log__sorter__arrow__selected')\n      } else {\n        tempLogArray = [...props.user.log].sort((first, second) =>  Number(first.odometer) <= Number(second.odometer) ? 1 : -1 )\n        arrow.classList.add('log__sorter__arrow__selected')\n      }\n      let updatedUser = {...props.user}\n      updatedUser.log = tempLogArray\n      props.updateUserState(updatedUser)\n      return\n    }\n\n    if (method === 'costs') {\n      let tempLogArray = []\n      if ( (Number(props.user.log[0].partsCost) + Number(props.user.log[0].laborCost)) >= (Number(props.user.log[1].partsCost) + Number(props.user.log[1].laborCost))) {\n        tempLogArray = [...props.user.log].sort((first, second) => (Number(first.partsCost) + Number(first.laborCost)) <= (Number(second.partsCost) + Number(second.laborCost)) ? -1 : 1 )\n        arrow.classList.remove('log__sorter__arrow__selected')\n      } else {\n        tempLogArray = [...props.user.log].sort((first, second) => (Number(first.partsCost) + Number(first.laborCost)) <= (Number(second.partsCost) + Number(second.laborCost)) ? 1 : -1 )\n        arrow.classList.add('log__sorter__arrow__selected')\n      }\n      let updatedUser = {...props.user}\n      updatedUser.log = tempLogArray\n      props.updateUserState(updatedUser)\n      return\n    }\n  }\n\n  return (\n    <div className='log__sorter__container'>\n      <div className=\"log__sorter__item log__sorter__service\">\n        <span onClick={e => sortBy('service',e)}>service <span className=\"log__sorter__arrow service__arrow\">▴</span></span>\n      </div>\n      <div className=\"log__sorter__item log__sorter__dates\">\n        <span onClick={e => sortBy('date',e)}>dates <span className=\"log__sorter__arrow date__arrow\">▴</span></span>\n      </div>\n      <div className=\"log__sorter__item log__sorter__mileage\">\n        <span onClick={e => sortBy('mileage',e)}>mileage <span className=\"log__sorter__arrow mileage__arrow\">▴</span></span>\n      </div>\n      <div className=\"log__sorter__item log__sorter__costs\">\n        <span onClick={e => sortBy('costs',e)}>costs <span className=\"log__sorter__arrow costs__arrow\">▴</span></span>\n      </div>\n    </div>\n  )\n}\n\nLogSorter.propTypes = {\n  user: PropTypes.shape({\n    cookies: PropTypes.string,\n    email: PropTypes.string,\n    log: PropTypes.array,\n    name: PropTypes.string,\n    sessionID: PropTypes.string,\n    userID: PropTypes.string,\n    vehicles: PropTypes.array,\n    selectedVehicles: PropTypes.array\n  }),\n  updateUserState: PropTypes.func.isRequired\n}\n\nexport default LogSorter\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport VehiclesSelector from '../components/vehicle/VehiclesSelector'\nimport LogEntry from '../components/log/LogEntry'\nimport LogSorter from '../components/log/LogSorter'\n\nfunction Log(props) {\n  // [] Contains String IDs of all vehicles currently selected for view\n  const [vehiclesShowing, changeVehiclesShowing] = useState([])\n  // [] Contains log entries that will be rendered (as that log entry's vehicle has been selected) \n  const [entriesShowing, changeEntriesShowing] = useState([])\n\n  // at initial mount, setup data for rendering\n  useEffect(() => {\n    // Defaults to the currently selectedVehicle(s) ID(s) if any, OR\n    // Defaults to all ID(s) in the user's vehicles array\n    const veh = []\n    if (props.user.selectedVehicles.length > 0) { \n      props.user.selectedVehicles.forEach(vehicle => {\n        if (vehicle !== undefined && vehicle.id) veh.push(vehicle.id)\n      })\n    } else if (props.user.vehicles.length > 0) {\n      props.user.vehicles.forEach(vehicle => {\n        if (vehicle !== undefined && vehicle.id) veh.push(vehicle.id)\n      })\n    }\n    console.log('Found initial vehicleShowing ID(s): ')\n    console.log(veh)\n    changeVehiclesShowing([...veh])\n\n    const ent = props.user.log.filter(logEntry => veh.includes(logEntry.vehicle))\n    console.log('Found initial entries showing: ')\n    console.log(ent)\n    changeEntriesShowing(ent)\n    console.log('After setup. Entries: ')\n    console.log(entriesShowing)\n  }, []) // empty [] only runs this at initial startup, prevents infinite re-render loop\n\n  console.log('(After useEffect) Vehicles and Logs: ')\n  console.log(vehiclesShowing)\n  console.log(entriesShowing)\n\n  const changeVehicleStatus = event => {\n    const clickedOnVehicleId = event.target.name\n    console.log(`Changing click status for vehicle id: ${clickedOnVehicleId}.`)\n    let vehicleUpdates = []\n    // if it is already in the list, remove it\n    if (vehiclesShowing.includes(clickedOnVehicleId)) {\n      console.log('current vehicles includes this vehicle ID already. Removing it.')\n      vehicleUpdates = vehiclesShowing.filter(vehicleId => vehicleId !== clickedOnVehicleId)\n    } else { // if it was not in the list, add it\n      console.log('current vehicles does not include this vehicle ID. Adding it.')\n      vehicleUpdates = vehiclesShowing\n      vehicleUpdates.push(clickedOnVehicleId)\n    }\n    console.log('Vehicle Updates queued: ')\n    console.log(vehicleUpdates)\n    changeVehiclesShowing(vehicleUpdates)\n    console.log('Updated which vehicles are displayed. vehiclesShowing state: ')\n    console.log(vehiclesShowing)\n\n    console.log('Log entries updates queued: ')\n    const logUpdates = props.user.log.filter(logEntry => vehicleUpdates.includes(logEntry.vehicle))\n    console.log(logUpdates)\n    changeEntriesShowing(logUpdates)\n    console.log('Updated which log entries are displayed: ')\n    console.log(entriesShowing)\n  }\n\n  return (\n    <div className=\"inner\">\n      <h2>Service History</h2>\n      <VehiclesSelector allVehicles={props.user.vehicles} vehiclesShowing={vehiclesShowing} changeVehiclesShowing={changeVehicleStatus} />\n      { entriesShowing.length === 0 &&\n        <div className=\"card no__log\">\n          <h3>No Log Entries Found!</h3>\n          <div>\n            <p className=\"padded\">No log entries for the vehicles selected. Please select more vehicles or add a new entry.</p>\n          </div>\n          <Link className=\"button\" to=\"/add\">Add A Log Entry Now</Link>\n        </div>\n      }\n      { entriesShowing.length > 0 &&\n        <div className=\"padded\">\n          <LogSorter {...props} />\n          {entriesShowing && entriesShowing.map(entry => <LogEntry key={entry._id} data={entry} />)}\n        </div>\n      }\n    </div>\n  )\n}\n\nLog.propTypes = {\n  user: PropTypes.shape({\n    cookies: PropTypes.string,\n    email: PropTypes.string,\n    log: PropTypes.array,\n    name: PropTypes.string,\n    sessionID: PropTypes.string,\n    userID: PropTypes.string,\n    vehicles: PropTypes.array,\n    selectedVehicles: PropTypes.array\n  })\n}\n\nexport default Log","import React from 'react'\nimport { Redirect } from 'react-router'\n\nfunction NotFound() {\n  console.log('unable to find a page associated with this route. redirecting to /welcome')\n  return <Redirect to=\"/welcome\" />\n}\n\nexport default NotFound","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { useParams, useHistory } from 'react-router-dom'\nimport axios from 'axios'\n\nimport Loading from '../components/Loading'\nimport { resetPassword } from '../helpers'\n\nfunction PasswordReset(props) {\n  // params contains the reset link token\n  const { token } = useParams()\n  console.log('Rendering password reset with token: '+token)\n  const history = useHistory()\n  if (!token) history.push('/welcome')\n\n  // verify token validity\n  // an invalid token is expired or just the wrong hash, don't render anything...  \n  useEffect(() => {\n    async function checkValidity() { \n      try {\n        console.log(`posting to: ${process.env.REACT_APP_API_DOMAIN}/account/reset/${token}/confirm`)\n        const response = await axios.post(`${process.env.REACT_APP_API_DOMAIN}/account/reset/${token}/confirm`)\n        console.log(response)\n        console.dir(response)\n        if (response.status === 200) return true\n        if (response.status === 404) history.push('/welcome')\n        console.log('Response received but with status code: '+response.status)\n        const error = new Error(response.error)\n        throw error\n      } catch(err) {\n        console.log('Error posting to /account/reset/'+token+'/confirm')\n        console.dir(err)\n        history.push('/welcome')\n      }\n    }\n    checkValidity()\n  }, []) // empty [] indicates only run this on initial render/mount, not re-renders\n\n  const [state, setState] = useState({\n    token: token,\n    password: '',\n    passwordConfirm: ''\n  })\n  const [loading, setLoading] = useState(false)\n\n  const handleInputChange = event => {\n    setState({\n      ...state,\n      [event.target.name]: event.target.value\n    })\n  }\n\n  const handleReset = async event => {\n    event.preventDefault()\n    const { token, password, passwordConfirm } = state\n    setLoading(true)\n    console.log('Loading. Sending to /account/reset/:token ')\n    console.log(token, password, passwordConfirm)\n    const result = await resetPassword(token, password, passwordConfirm)\n    setLoading(false)\n    if (!result || result.response !== undefined) {\n      return alert(`Error resetting password. Please try again. Status ${result.response.status}: ${result.response.statusText}.`)\n    }\n    if (Object.keys(result.user).length === 0) {\n      return alert('Unable to reset the password at this time. Please try again.')\n    }\n    await props.updateUserState(result.user)\n    history.push('/')\n  }\n\n  if (loading) return <Loading message=\"Updating Your Password...\" />\n\n  return (\n    <div className=\"card\">\n      <h3>Password Reset</h3>\n      <form className=\"padded\" onSubmit={handleReset} method=\"POST\" encType=\"multipart/form-data\" multiple=\"multiple\">\n        <input type=\"hidden\" name=\"token\" value={token} />\n        <label htmlFor=\"password\">Password</label>\n        <input type=\"password\" name=\"password\" placeholder=\"Enter password...\" value={state.password || ''} onChange={handleInputChange} />\n        <label htmlFor=\"passwordConfirm\">Confirm Password</label>\n        <input type=\"password\" name=\"passwordConfirm\" placeholder=\"Confirm password...\" value={state.passwordConfirm || ''} onChange={handleInputChange} />\n        <input className=\"button\" type=\"submit\" value=\"Reset Password →\" />\n      </form>\n    </div>\n  )\n}\n\nPasswordReset.propTypes = {\n  updateUserState: PropTypes.func.isRequired\n}\n\nexport default PasswordReset","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction SearchResults(props) {\n  return (\n    <section className=\"search__results\" >\n      <h4>Results: </h4>\n      <div>\n        {props.results.map((result, index) => (\n          <div key={result.id} className=\"card search__result\">\n            <h3>{result.name}</h3>\n            <p className=\"result__detail\">{result.shortDescription}</p>\n            <div className=\"search__result__buttons\">\n              <Link to={`log/${result.slug}`} className=\"button\">View</Link>\n              <Link to={`log/${result.id}/edit`} className=\"button\">Edit</Link>            \n            </div>\n          </div>\n        ))}\n      </div>\n    </section>\n  )\n}\n\nexport default SearchResults","import React from 'react'\nimport axios from 'axios'\nimport { ReactSVG } from 'react-svg'\n\nimport SearchResults from './SearchResults'\nimport Loading from './Loading'\nimport MagnifyingGlassIcon from '../images/magnifying.svg'\n\nimport '../styles/search.css'\n\nclass SearchBox extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      query: '',\n      results: [],\n      searching: false,\n      counter: 0\n    }\n  }\n\n  getInfo = async () => {\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_API_DOMAIN}/api/search?q=${this.state.query}`)\n      if (response.data.length) {\n        this.setState({\n          results: response.data,\n          searching: false\n        }) \n      }\n    } catch (err) {\n        console.log('Error posting to /api/search')\n        console.dir(err)\n        alert('Error searching log data! Please try again.')\n    }\n  }\n\n  handleInputChange = e => {\n    e.preventDefault()\n    this.setState({\n      query: e.target.value,\n      searching: true,\n      results: []\n    }, () => {\n      // only query the API at most 2x per second (every 500 ms)\n      if (this.state.query && this.state.query.length > 1 && Date.now() - this.state.counter > 500) {\n        this.getInfo()\n        this.setState({ counter: Date.now() })\n      } else { // wait half a second, then query\n        setTimeout(() => {\n          this.getInfo()\n        }, 500)\n      }\n    })\n  }\n\n  blurCleanup = () => {\n    if (this.state.query.length === 0) this.setState({ results: [] })\n  }\n\n  clearInput = e => {\n    e.preventDefault()\n    this.setState({ query: '', searching: false, results: [] })\n  }\n\n  render() {\n    const buttonImg = this.state.query && this.state.query.length > 0 ? \n      <strong>&times;</strong> :\n      <ReactSVG src={MagnifyingGlassIcon} role=\"img\" aria-label=\"Magnifying Glass Icon\" fallback={() => <img src={MagnifyingGlassIcon} alt=\"magnifying glass icon\" description=\"magnifying glass icon\" className=\"svg\" />} /> \n\n    return (\n      <form className=\"search__form\">\n        <div className=\"search__input__container\">\n          <input\n            placeholder=\"Search parts, service, etc...\"\n            onKeyUp={this.handleInputChange}\n            onChange={this.handleInputChange}\n            onBlur={this.blurCleanup}\n            value={this.state.query}\n            className='search__input'\n          />\n          <button className=\"button search__button\" onClick={this.clearInput}>{buttonImg}</button>\n        </div>\n        {this.state.loading && <Loading message={`Searching for: ${this.state.query}`} />}\n        {this.state.results && this.state.results.length > 0 &&\n          <SearchResults homepage={this.props.homepage} results={this.state.results} /> \n        }\n        {this.state.results.length === 0 && this.state.query.length > 0 &&\n          <h5>No match found for that search...</h5>\n        }\n      </form>\n    )\n  }\n}\n\nexport default SearchBox\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport SearchBox from '../components/SearchBox'\n\nfunction Search() {\n  return (\n    <div className=\"inner\">\n      <h2>Search</h2>\n      <div className=\"card\">\n        <SearchBox />\n      </div>\n    </div>\n  )  \n}\n\nSearch.propTypes = {\n  user: PropTypes.shape({\n    cookies: PropTypes.string,\n    email: PropTypes.string,\n    log: PropTypes.array,\n    name: PropTypes.string,\n    sessionID: PropTypes.string,\n    userID: PropTypes.string,\n    vehicle: PropTypes.array,\n    selectedVehicles: PropTypes.array\n  })\n}\n\nexport default Search","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom'\n\nfunction Logout(props) {\n  const history = useHistory()\n  const [showLogoutButton, toggleShowLogoutButton] = useState(false)\n\n  const toggleConfirmLogout = event => {\n    event.preventDefault()\n    toggleShowLogoutButton(!showLogoutButton) // flip true -> false -> true...\n  }\n\n  const apiLogout = async event => {\n    event.preventDefault()\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_API_DOMAIN}/api/logout`)\n      if (response.status === 200) {\n        props.updateUserState({ name: '', userID: '', sessionID: '', cookies: '', email: '', log: [], vehicles: [], selectedVehicles: []})\n        return history.push('/welcome')\n      } else {\n        const error = new Error(response.error)\n        throw error\n      }\n    } catch(err) {\n      console.err(err)\n    }\n  }\n  return (\n    <div className=\"card\">\n      <h3>Disconnect Account and Logout</h3>\n      <div className=\"logout__container padded\">\n        <button className={`button ${showLogoutButton ? 'confirm--active' : 'confirm'}`} onClick={toggleConfirmLogout}>{showLogoutButton ? 'Cancel Logout' : 'Logout'}</button>\n        { showLogoutButton && <button className=\"button disconnect\" onClick={apiLogout}><span className=\"red\">Confirm and Logout</span></button> }\n      </div>\n    </div>\n  )\n}\n\nLogout.propTypes = {\n  updateUserState: PropTypes.func.isRequired\n}\n\nexport default Logout","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { updateUserAccount } from '../../helpers'\n\nfunction AccountSettings(props) {\n  const [state, setState] = useState({\n    name: props.user.name || '',\n    email: props.user.email || '',\n    password: ''\n  })\n\n  const handleInputChange = event => {\n    setState({ ...state, [event.target.name]: event.target.value })\n  }\n\n\n  const saveAccountChanges = async event => {\n    event.preventDefault()\n    const userUpdates = { ...props.user }\n    userUpdates.name = state.name\n    userUpdates.email = state.email\n    // TODO confirmation and password changing option\n    const updates = await updateUserAccount(userUpdates)\n    console.log('1')\n    console.log('TODO why props.user instead of the extant userUpdates?')\n    const updatedUser = props.user\n    updatedUser.log = updates.log\n    updatedUser.vehicles = updates.vehicles\n    updatedUser.selectedVehicles = state.selectedVehicles\n    await props.updateUserState(updatedUser)\n  }\n\n  return (\n    <div className=\"card\">\n      <h3>Account</h3>\n      <form className=\"padded\" onSubmit={saveAccountChanges} method=\"POST\">\n        <label htmlFor=\"name\">Name</label>\n        <input type=\"text\" placeholder=\"Enter name...\" name=\"name\" value={state.name || ''} onChange={handleInputChange} />\n        <label htmlFor=\"email\">Email Address</label>\n        <input type=\"email\" placeholder=\"Enter email...\" name=\"email\" value={state.email || ''} onChange={handleInputChange} />\n        {/* <label htmlFor=\"password\">Password</label>\n        <input type=\"password\" placeholder=\"Enter password...\" name=\"password\" value={state.password || ''} onChange={handleInputChange} /> */}\n        <input className=\"button\" type=\"submit\" value=\"Save Account Changes\" />\n      </form>\n    </div>\n  )\n}\n\nAccountSettings.propTypes = {\n  user: PropTypes.shape({\n    cookies: PropTypes.string,\n    email: PropTypes.string,\n    log: PropTypes.array,\n    name: PropTypes.string,\n    sessionID: PropTypes.string,\n    userID: PropTypes.string,\n    vehicles: PropTypes.array,\n    selectedVehicles: PropTypes.array\n  }),\n  updateUserState: PropTypes.func.isRequired\n  // history: PropTypes.object.isRequired\n}\n\nexport default AccountSettings","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Loading from '../Loading'\n\nclass VLVin extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      vin: '',\n      resultsError: null,\n      vehicle: {\n        make: '',\n        model: '',\n        year: ''\n      },\n      loading: false\n    }\n  }\n\n  handleInputChange = event => {\n    this.setState({ vin: event.target.value })\n  }\n\n  vinSearch = async event => {\n    event.stopPropagation()\n    event.preventDefault()\n    if (!this.state.vin) return\n    await this.setState({ loading: true })\n    try {\n      const response = await fetch(`https://vpic.nhtsa.dot.gov/api/vehicles/decodevin/${this.state.vin}?format=json`)\n      const data = await response.json()\n      const results = await data[\"Results\"]\n      // Per the NHTSA API spec (https://vpic.nhtsa.dot.gov/api/):\n      const error = Number(results[4][\"Value\"][0])\n      if (error === 0) {\n        const year = results[9][\"Value\"]\n        const rawMake = results[6][\"Value\"]\n        const make = rawMake.charAt(0).toUpperCase() + rawMake.slice(1).toLowerCase()\n        const model = results[8][\"Value\"]\n        this.setState({ vehicle: { year, make, model }, loading: false })\n      } else {\n        this.setState({ resultsError: `No Results Found for VIN \"${this.state.vin}\". Please try again.`, loading: false })\n      }\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  render() {\n    if (this.state.loading) return <Loading message=\"Searching for VIN...\" />\n\n    return (\n      <div className=\"searchByVinDiv\">\n        <div className=\"vinSearchInput\">\n          <label htmlFor=\"vin\">VIN</label>\n          <input type=\"text\" name=\"vin\" value={this.state.vin} onChange={this.handleInputChange} />\n          <button className=\"button\" onClick={this.vinSearch}>Search For VIN</button>\n        </div>\n        <div className=\"vehicleResults\">\n          { this.state.resultsError && <span>{this.state.resultsError}</span> }\n          { !this.state.resultsError && this.state.vehicle && this.state.vehicle.make.length > 0 &&\n            <>\n              <h4>Vehicle Found</h4>\n              <span>{`Year: ${this.state.vehicle.year}`}</span>\n              <span>{`Make: ${this.state.vehicle.make}`}</span>\n              <span>{`Model: ${this.state.vehicle.model}`}</span>\n              <button className=\"button\" onClick={() => this.props.saveNewVehicle({ vin: this.state.vin, ...this.state.vehicle })}>Add Vehicle To Account</button>\n            </>          \n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nVLVin.propTypes = {\n  saveNewVehicle: PropTypes.func.isRequired\n}\n\nexport default VLVin","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nfunction VLManual(props) {\n  const [state, setState] = useState({\n    year: props.year || '',\n    make: props.make || '',\n    model: props.model || '',\n    vin: props.vin || '',\n    odometer: props.odometer || 0,\n    primary: props.primary || false,\n    id: props._id || '',\n    owner: props.owner || ''\n  })\n\n  const handleInputChange = event => {\n    setState({ ...state, [event.target.name]: event.target.value })\n  }\n\n  const togglePrimary = () => { \n    setState({ ...state, primary: !state.primary })\n  }\n\n  return (\n    <div className=\"form manualVehicleEntryDiv\">\n      <label htmlFor=\"year\">Year</label>\n      <input type=\"number\" name=\"year\" min=\"1900\" step=\"1\" value={state.year} onChange={handleInputChange} />\n      <label htmlFor=\"make\">Make </label>\n      <input type=\"text\" name=\"make\" value={state.make} onChange={handleInputChange} />\n      <label htmlFor=\"model\">Model </label>\n      <input type=\"text\" name=\"model\" value={state.model} onChange={handleInputChange} />\n      <label htmlFor=\"odometer\">Latest Odometer Reading</label>\n      <input type=\"number\" name=\"odometer\" min=\"0\" step=\"0.1\" value={state.odometer} onChange={handleInputChange} />\n      <label htmlFor=\"vin\">VIN</label>\n      <input type=\"text\" name=\"vin\" value={state.vin} onChange={handleInputChange} />\n      <div className=\"checkboxes__container\">\n        <label htmlFor=\"primaryCheckbox\">Main Vehicle</label>\n        <input type=\"checkbox\" name=\"primaryCheckbox\" checked={state.primary} onChange={togglePrimary} />\n      </div>\n      {props.editing ?\n        <button className=\"button\" onClick={() => props.saveVehicleChanges(state)}>Save Vehicle Changes</button> :\n        <button className=\"button\" onClick={() => props.saveNewVehicle(state)}>Add Vehicle To Account</button>      \n      }\n    </div>\n  )\n}\n\nVLManual.propTypes = {\n  saveNewVehicle: PropTypes.func.isRequired,\n  saveVehicleChanges: PropTypes.func,\n  year: PropTypes.number,\n  make: PropTypes.string,\n  model: PropTypes.string,\n  vin: PropTypes.string,\n  odometer: PropTypes.number,\n  id: PropTypes.string,\n  owner: PropTypes.string,\n  primary: PropTypes.bool,\n  editing: PropTypes.bool // flag for new vehicle (blank form) or edit extant vehicle (fill form w/details)\n}\n\nexport default VLManual","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { manufacturers } from '../../helpers'\n\nclass VLYMM extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      year: new Date().getFullYear(),\n      make: '',\n      models: [],\n      model: '',\n      showConfirmButton: false\n    }\n  }\n\n  async lookupModelsByYearAndMake() {\n    // console.log(\"Select changed. Calling lookupMakeQuery... \")\n    if (!this.state || !this.state.year || !this.state.make) {\n      return console.log('leaving lookup early due to no year or make selected...')\n    }\n    // console.log('Make selected: '+this.state.make)\n    // check for a local cache of the query\n    const localStorageKey = this.state.year.toString() + this.state.make.toString()\n    const localStorageModels = localStorage.getItem(localStorageKey)\n    if (localStorageModels !== null) {\n      console.log('Duplicate query. Retrieving cache from localStorage...')\n      const localStorageModelsArray = localStorageModels.split(',') // turns comma-delineated string into array of strings\n      console.log(localStorageModelsArray)\n      this.setState({ models: localStorageModelsArray, showConfirmButton: false })\n    } else {\n      fetch(`https://vpic.nhtsa.dot.gov/api/vehicles/getmodelsformakeyear/make/${this.state.make}/modelyear/${this.state.year}?format=json`)\n        .then(async data => {\n          const json = await data.json()\n          let models = json[\"Results\"]\n          // alphabetize results\n          models.sort((a, b) => {\n            if (a[\"Model_Name\"] > b[\"Model_Name\"]) return 1\n            if (a[\"Model_Name\"] < b[\"Model_Name\"]) return -1\n            else return 0\n          })\n          const modelsArray = models.map(model => model[\"Model_Name\"])\n          // console.log(modelsArray)\n          // cache query results\n          if (modelsArray.length > 0) localStorage.setItem(localStorageKey, modelsArray)\n          this.setState(prevState => ({ models: [...modelsArray], showConfirmButton: false }))\n        })\n        .catch(err => console.error(err))\n    }\n  }\n  \n  handleSelectChange = async event => {\n    event.preventDefault()\n    // await state change before calling the next method as that relies on the updated state value...\n    await this.setState({ [event.target.name]: event.target.value })\n    if (this.state && this.state.year && this.state.make) {\n      this.lookupModelsByYearAndMake()\n    }\n    if (this.state && this.state.year && this.state.make && this.state.models && this.state.model) {\n      await this.setState({ showConfirmButton: true })\n    }\n  }\n\n  render() {\n    const thisYear = new Date().getFullYear()\n\n    return (\n      <div className=\"form vehicleLookupDiv\">\n        <div className=\"vehicleLookupInput\">\n          <label htmlFor=\"year\">Year</label>\n          <select name=\"year\" defaultValue={thisYear} onChange={this.handleSelectChange}>\n            { \n              Array.from(Array(thisYear - 1920).keys()).map((item, i) => <option key={i} value={thisYear - i}>{thisYear - i}</option> )\n            }\n          </select>\n          <label htmlFor=\"make\">Make</label>\n          <select name=\"make\" defaultValue=\"\" onChange={this.handleSelectChange}>\n            <option value=\"\" disabled=\"disabled\">Select a manufacturer...</option>\n            {\n              manufacturers.map((val, idx) => <option key={val} value={val}>{val}</option> )\n            }\n          </select>\n          <label htmlFor=\"model\">Model</label>\n          <select name=\"model\" defaultValue=\"First select a make...\" onChange={this.handleSelectChange}>\n            <option value=\"First select a make...\" disabled=\"disabled\">First select a manufacturer...</option>\n            { this.state.models.length > 0 &&\n              this.state.models.map((val, idx) => <option key={val} value={val}>{val}</option> )\n            }\n          </select>\n      </div>\n      { this.state.showConfirmButton && \n        <button className=\"button\" onClick={() => this.props.saveNewVehicle(this.state)}>Add Vehicle To Account</button>\n      }\n    </div>\n    )\n  }\n}\n\nVLYMM.propTypes = {\n  saveNewVehicle: PropTypes.func.isRequired\n}\n\nexport default VLYMM","import React, { useContext, useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom'\n\nimport VLVin from './VLVin'\nimport VLManual from './VLManual'\nimport VLYMM from './VLYMM'\nimport Loading from '../Loading'\n\nimport UserContext from '../../contexts/UserContext'\nimport { addVehicle, updateVehicle } from '../../helpers'\nimport '../../styles/vehicle.css'\n\nfunction VehicleSettings(props) {\n  console.log('loading vehicle settings with props:')\n  console.dir(props)\n  const history = useHistory()\n  const [vehicleLookupsShowing, showVehicleLookups] = useState(false)\n  const [manualLookupShowing, showManualLookup] = useState(false)\n  const [vinLookupShowing, showVinLookup] = useState(false)\n  const [yearMakeModelLookupShowing, showYearMakeModelLookup] = useState(false)\n  // dictionary of shape { vehicleID : Boolean } for if that vehicle ID is being edited currently\n  // this controls whether the edit vehicle (VLManual component) is loaded for that vehicle \n  const [vehiclesEditing, changeVehicleEditStatus] = useState({})\n  const [loading, setLoading] = useState(false)\n  const {user, updateUserState} = useContext(UserContext)\n\n  useEffect(() => {\n    if (props.vehicles && props.vehicles.length > 0) {\n      let transform = {}\n      props.vehicles.forEach(vehicle => {\n        transform[vehicle._id] = false \n      })\n      console.log('component mounting, initializing state for whether each individual vehicle is being edited or not') \n      console.log(transform)\n      if (Object.keys(vehiclesEditing).length === 0) changeVehicleEditStatus({...transform})\n    }\n  }, [props.vehicles, vehiclesEditing])\n  \n  const vehicleLookupChanger = view => {\n    showVehicleLookups(true)\n    showVinLookup(false)\n    showManualLookup(false)\n    showYearMakeModelLookup(false)\n    // view useState toggles: showYearMakeModelLookup, showVinLookup, or showManualLookup\n    // [view](true) -- TODO make this dynamic function call work instead of the switch...\n    switch (view) {\n      case 'showVinLookup': \n        showVinLookup(true)\n        break\n      case 'showManualLookup': \n        showManualLookup(true)\n        break\n      case 'showYearMakeModelLookup': \n        showYearMakeModelLookup(true)\n        break\n      default: showYearMakeModelLookup(true)\n    }\n  }\n\n  const saveNewVehicle = async vehicle => {\n    setLoading(true)\n    // ensure even optional properties are sent to the server/db\n    vehicle.make = vehicle.make || ''\n    vehicle.model = vehicle.model || ''\n    vehicle.odometer = vehicle.odometer || 0\n    vehicle.vin = vehicle.vin || ''\n    vehicle.year = vehicle.year || ''\n    vehicle.primary = vehicle.primary || false\n    // ensure unnecessary state items are not passed to the server/db\n    delete vehicle.models // from year+make+model vehicle lookup\n    delete vehicle.showConfirmButton // from year+make+model vehicle lookup\n\n    // console.log('Save New Vehicle in VehicleSettings. Adding vehicle:')\n    // console.dir(vehicle)\n    const newLogVehicleArrays = await addVehicle(vehicle)\n    // console.log('returned to saveNewVehicle in VehicleSettings')\n    // console.log(newLogVehicleArrays)\n    const newUser = {...user, log: newLogVehicleArrays.log, vehicles: newLogVehicleArrays.vehicles}\n    await updateUserState({ ...newUser })\n    showVehicleLookups(false)\n    setLoading(false)  \n  }\n\n  const saveVehicleChanges = async vehicle => {\n    // console.log('saveVehicleChanges called from VehicleSettings component')\n    // console.log(vehicle)\n    if (!vehicle || !vehicle.id || !vehicle.owner) return new Error('Problem updating vehicle. Please try again.')\n    setLoading(true)\n    // ensure even optional properties are sent to the server/db\n    vehicle.make = vehicle.make || ''\n    vehicle.model = vehicle.model || ''\n    vehicle.odometer = vehicle.odometer || 0\n    vehicle.vin = vehicle.vin || ''\n    vehicle.year = vehicle.year || ''\n    vehicle.primary = vehicle.primary || false\n    vehicle._id = vehicle.id\n\n    // set state to no longer be editing this vehicle after saving updates\n    changeVehicleEditStatus({ ...vehiclesEditing, [vehicle._id]: !vehiclesEditing[vehicle._id] })\n    const newLogVehicleArrays = await updateVehicle(vehicle)\n    // console.log('sent changes to server. results: ')\n    // console.log(newLogVehicleArrays)\n    const newUser = {...user, log: newLogVehicleArrays.log, vehicles: newLogVehicleArrays.vehicles}\n    await updateUserState({ ...newUser })\n    showVehicleLookups(false)\n    setLoading(false)\n  }\n\n  const deleteVehicle = async vehicleId => {\n    if (!vehicleId) return alert('Unable to locate vehicle ID. Please try again.')\n    setLoading(true)\n    console.log('Deleting vehicle: '+vehicleId)\n    // DOMAIN/api/delete/vehicle/:vehicleId\n    const url = `${process.env.REACT_APP_API_DOMAIN}/api/delete/vehicle/${vehicleId}`\n    try {\n      const result = await axios.post(url)\n      console.log('got results from delete vehicle post:')\n      console.dir(result)\n      if (result.status === 200) {\n        // update State to remove the deleted entry\n        const newVehicleList = user.vehicles.filter(vehicle => vehicle._id !== vehicleId)\n        console.log('Purged deleted vehicle. New vehicle list: ')\n        console.log(newVehicleList)\n        delete user.vehicles\n        user.vehicles = [...newVehicleList]\n        await updateUserState(user)\n        setLoading(false)\n        return history.push(`/settings`)\n      }\n    } catch(err) {\n      console.error(err)\n      setLoading(false)\n    }\n  }\n\n  if (loading) return <Loading message=\"Loading/Updating Vehicle Settings...\" />\n\n  return (\n    <div className=\"card\">\n      <h3>{`Vehicle${(props.vehicles && props.vehicles.length) > 1 ? \"s\": \"\"}`}</h3>\n      <div>\n      { (props.vehicles && props.vehicles.length > 0) && props.vehicles.map(vehicle => {\n          return (\n            <div key={vehicle._id} className={`${vehicle.primary ? 'vehicle__container padded primary' : 'vehicle__container padded'}`} >\n              <h4>{vehicle.year}&nbsp;{vehicle.make}&nbsp;{vehicle.model}</h4>\n              <div className=\"card vehicle__editor\">\n                <button \n                  className={vehiclesEditing[vehicle._id] ? `button warn` : `button`} \n                  onClick={() => changeVehicleEditStatus({ ...vehiclesEditing, [vehicle._id]: !vehiclesEditing[vehicle._id] }) } >\n                    { vehiclesEditing[vehicle._id] ? `Close Editor Without Saving` : `Edit` }\n                </button>\n                { vehiclesEditing[vehicle._id] && \n                <>\n                  <VLManual {...vehicle} saveNewVehicle={saveNewVehicle} saveVehicleChanges={saveVehicleChanges} editing={true} /> \n                  <button className=\"button delete delete__vehicle\" onClick={() => deleteVehicle(vehicle._id)}>Permanently Delete Vehicle</button>\n                </>\n                }\n              </div>\n            </div>\n          )\n        }) \n      }\n      </div>\n      <div className=\"add__vehicle__container padded\">\n        { vehicleLookupsShowing && \n          <>\n            <div className=\"buttons__holder\">\n              <button className=\"button\" onClick={() => showVehicleLookups(false)} >Hide Vehicle Search</button>\n            </div>\n            <div className=\"buttons__holder\">\n              <span>Find Vehicle By:</span>\n              <button className={`lookup__button ${yearMakeModelLookupShowing ? 'lookup__selected' : ''}`} onClick={() => vehicleLookupChanger('showYearMakeModelLookup')}>Make &amp; Model</button>\n              <button className={`lookup__button ${vinLookupShowing ? 'lookup__selected' : ''}`} onClick={() => vehicleLookupChanger('showVinLookup')}>VIN</button>\n              <button className={`lookup__button ${manualLookupShowing ? 'lookup__selected' : ''}`} onClick={() => vehicleLookupChanger('showManualLookup')}>Manually Enter</button>\n            </div>\n            <div className=\"lookupSwitcher\">\n              { vinLookupShowing && <VLVin currentVehicle={(props.selectedVehicles && props.selectedVehicles.length > 0 && props.selectedVehicles[0]) || {}} saveNewVehicle={saveNewVehicle} /> }\n              { yearMakeModelLookupShowing && <VLYMM currentVehicle={(props.selectedVehicles && props.selectedVehicles.length > 0 && props.selectedVehicles[0]) || {}} saveNewVehicle={saveNewVehicle} /> }\n              { manualLookupShowing && <VLManual saveNewVehicle={saveNewVehicle} saveVehicleChanges={saveVehicleChanges} /> }\n            </div>\n          </> }\n          \n        { !vehicleLookupsShowing && \n            <div className=\"buttons__holder\">\n              <button className=\"button\" onClick={() => showVehicleLookups(true)} >Add A New Vehicle</button>\n            </div>\n        }\n      </div>\n    </div>\n  )\n}\n\nVehicleSettings.propTypes = {\n  vehicles: PropTypes.array.isRequired,\n  selectedVehicles: PropTypes.array\n}\n\nexport default VehicleSettings","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useHistory } from 'react-router-dom'\n\nimport Logout from '../components/account/Logout'\nimport AccountSettings from '../components/account/AccountSettings'\nimport ThemeSwitcher from '../components/account/ThemeSwitcher'\nimport VehicleSettings from '../components/vehicle/VehicleSettings'\n\nimport '../styles/settings.css'\n\nfunction Settings(props) {  \n  const history = useHistory()\n\n  return (\n    <div className=\"inner\">\n      <h2>Settings</h2>\n      \n      <div className=\"padded\">\n        <VehicleSettings \n          selectedVehicles={props.user.selectedVehicles} \n          vehicles={props.user.vehicles} \n          history={history} />\n        <AccountSettings user={props.user} updateUserState={props.updateUserState} />\n        <ThemeSwitcher />\n        <Logout history={history} user={props.user} updateUserState={props.updateUserState} />\n      </div>\n    </div>\n  )\n}\n\nSettings.propTypes = {\n  user: PropTypes.shape({\n    cookies: PropTypes.string,\n    email: PropTypes.string,\n    log: PropTypes.array,\n    name: PropTypes.string,\n    sessionID: PropTypes.string,\n    userID: PropTypes.string,\n    vehicles: PropTypes.array,\n    selectedVehicles: PropTypes.array\n  }),\n  updateUserState: PropTypes.func.isRequired\n}\n\nexport default Settings\n","import React from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\nimport { ReactSVG } from 'react-svg'\n\nimport PhotoEditor from '../components/PhotoEditor'\nimport EditPencil from '../images/editPencil.svg'\n\nimport '../styles/singleLogEntry.css'\n\nfunction SingleLogEntry(props) {\n  const { slug } = useParams()\n  const log = props.user.log.filter(entry => entry.slug === slug)\n  const { id, shortDescription, longDescription, dateStarted, dateCompleted, dateEntered, dateDue, mileageDue, name, odometer, tools, parts, partsCost, laborCost, serviceLocation, photos } = log[0]\n  const vehicleID = log[0].vehicle\n  const vehicleArray = props.user.vehicles.filter(_vehicle => _vehicle.id === vehicleID)\n  const vehicle = vehicleArray[0]\n\n  return (\n    <div className=\"inner\">\n      <div className=\"card\">\n        <h2>{name.length > 120 ? `${name.substring(0,120)}...` : name}</h2>\n        <div className=\"padded single__details\">\n          <div>\n            <div>\n              <strong>Service Performed: </strong>\n              <span>{shortDescription}</span>\n            </div>\n            <div>\n              <strong>Date Entered: </strong>\n              <span>{moment(dateEntered).format(\"MMM Do YYYY\")}</span>\n            </div>\n            <div>\n              <strong>Vehicle: </strong>\n              <span>{vehicle.year} {vehicle.make} {vehicle.model} {` at `} {odometer && Number(odometer).toLocaleString()} {` miles`}</span>\n            </div>\n          </div>\n          <div>\n            <strong>Long Description: </strong>\n            <span>{longDescription}</span>\n          </div>\n          <div>\n            <div>\n              <strong>Started: </strong>\n              <span>{moment(dateStarted).format(\"MMM Do YYYY\")}</span>\n            </div>\n            <div>\n              <strong>Completed: </strong>\n              <span>{moment(dateCompleted).format(\"MMM Do YYYY\")}</span>\n            </div>\n          </div>\n          <div>\n            {(mileageDue || dateDue) && \n            <>\n              <strong>Service is Due Next: </strong>\n              <span>{mileageDue > 0 ? `At ${Number(mileageDue).toLocaleString()} miles. ` : \"[unset] miles. \"} {dateDue && \"On \" && moment(dateDue).format(\"MMM Do YYYY\")}</span>\n            </>\n            }\n          </div>\n          <div>\n            <div>\n              <strong>Tools: </strong>\n              <span>{tools}</span>\n            </div>\n            <div>\n              <strong>Parts: </strong>\n              <span>{parts}</span>\n            </div>\n          </div>\n          <div>\n            <div>\n              <strong>Parts Cost: </strong>\n              <span>${partsCost && partsCost.toLocaleString()}</span>            \n            </div>\n            <div>\n              <strong>Labor Cost: </strong>\n              <span>${laborCost && laborCost.toLocaleString()}</span>\n            \n            </div>\n          </div>\n          <div>\n            <strong>Service Location: </strong>\n            <span>{serviceLocation}</span>\n          </div>\n\n          <Link className=\"button editPencil\" to={`/log/${id}/edit`}>\n            <ReactSVG src={EditPencil} role=\"img\" aria-label=\"Edit Pencil Icon\" fallback={() => <img src={EditPencil} alt=\"edit pencil icon\" description=\"edit pencil icon\" className=\"svg\" />} /> \n            <h5>Edit</h5>\n          </Link>\n\n        { photos && photos.length > 0 && <PhotoEditor photos={photos} editingBlocked={true} /> }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nSingleLogEntry.propTypes = {\n  user: PropTypes.shape({\n    cookies: PropTypes.string,\n    email: PropTypes.string,\n    log: PropTypes.array,\n    name: PropTypes.string,\n    sessionID: PropTypes.string,\n    userID: PropTypes.string,\n    vehicles: PropTypes.array,\n    selectedVehicles: PropTypes.array\n  }),\n  updateUserState: PropTypes.func.isRequired\n}\n\nexport default SingleLogEntry ","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nimport VehiclesSelector from '../components/vehicle/VehiclesSelector'\nimport LogEntry from '../components/log/LogEntry'\nimport LogSorter from '../components/log/LogSorter'\n\nfunction Todo(props) {\n  const [vehiclesShowing, changeVehiclesShowing] = useState([])\n  const [entriesShowing, changeEntriesShowing] = useState([])\n  \n  // at initial mount, setup data for rendering\n  useEffect(() => {\n    // Defaults to the currently selectedVehicle(s) ID(s) if any, OR\n    // Defaults to all ID(s) in the user's vehicles array\n    const veh = []\n    if (props.user.selectedVehicles.length > 0) { \n      props.user.selectedVehicles.forEach(vehicle => {\n        if (vehicle !== undefined && vehicle.id) veh.push(vehicle.id)\n      })\n    } else if (props.user.vehicles.length > 0) {\n      props.user.vehicles.forEach(vehicle => {\n        if (vehicle !== undefined && vehicle.id) veh.push(vehicle.id)\n      })\n    }\n    changeVehiclesShowing([...veh])\n\n    const ent = props.user.log.filter(logEntry => {\n      // each log entry has a:\n      // \"vehicle\" field which holds the String ID of the vehicle for this service\n      // \"mileageDue\" field which is an optional future odometer number at which the service repeats\n      // \"dateDue\" field which is an optional future date at which the service repeats\n      if (veh.includes(logEntry.vehicle) && (logEntry.mileageDue !== null || logEntry.dateDue !== null)) {\n        return logEntry\n      }\n    })\n    changeEntriesShowing(ent)\n  }, []) // empty [] only runs this at initial startup, prevents infinite re-render loop\n  \n  const changeVehicleStatus = event => {\n    const clickedOnVehicleId = event.target.name\n    let vehicleUpdates = []\n    // if it is already in the list, remove it\n    if (vehiclesShowing.includes(clickedOnVehicleId)) {\n      vehicleUpdates = vehiclesShowing.filter(vehicleId => vehicleId !== clickedOnVehicleId)\n    } else { // if it was not in the list, add it\n      vehicleUpdates = vehiclesShowing\n      vehicleUpdates.push(clickedOnVehicleId)\n    }\n    changeVehiclesShowing(vehicleUpdates)\n    const logUpdates = props.user.log.filter(logEntry => {\n      if (vehicleUpdates.includes(logEntry.vehicle) && (logEntry.mileageDue !== null || logEntry.dateDue !== null)) {\n        return logEntry\n      }\n    })\n    changeEntriesShowing(logUpdates)\n  }\n\n  return (\n    <div className=\"inner\">\n      <h2>Upcoming Service{Object.keys(entriesShowing).length > 1 ? 's': ''}</h2>\n      <VehiclesSelector allVehicles={props.user.vehicles} vehiclesShowing={vehiclesShowing} changeVehiclesShowing={changeVehicleStatus} />\n      { entriesShowing.length === 0 &&\n        <div className=\"card no__todos padded\">\n          <h3>No Future-Due Log Entries Found!</h3>\n        <div>\n            <p className=\"padded\">No log entries for the vehicles selected. Please select more vehicles or add a new entry.</p>\n          </div>\n          <Link className=\"button\" to=\"/add\">Add A Log Entry Now</Link>\n          <Link className=\"button\" to=\"/log\">Review Your Log</Link>\n        </div>\n      }\n      { entriesShowing.length > 0 &&\n        <div className=\"padded\">\n          <LogSorter {...props} />\n          {entriesShowing && entriesShowing.map(entry => <LogEntry key={entry._id} data={entry} />)}\n        </div>\n      }\n    </div>\n  )\n}\n\nTodo.propTypes = {\n  user: PropTypes.shape({\n    cookies: PropTypes.string,\n    email: PropTypes.string,\n    log: PropTypes.array,\n    name: PropTypes.string,\n    sessionID: PropTypes.string,\n    userID: PropTypes.string,\n    vehicles: PropTypes.array,\n    selectedVehicles: PropTypes.array\n  }),\n}\n\nexport default Todo","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { ReactSVG } from 'react-svg'\n\nimport Settings from '../images/account.svg'\nimport Add from '../images/addLog.svg'\nimport Log from '../images/log.svg'\nimport Search from '../images/search.svg'\nimport Todo from '../images/todo.svg'\n\nimport '../styles/nav.css'\n\nfunction Nav() {\n  return (\n    <nav className='nav'>\n      <NavLink to='/log' exact className='card navLink' activeClassName='navLink--active'>\n        <ReactSVG \n          src={Log} \n          role=\"img\" \n          className=\"svg__dark__fill\"\n          aria-label=\"Log Icon\" \n          fallback={() => <img src={Log} alt=\"log icon\" description=\"log icon\" className=\"svg svg__dark__fill\" />} /> \n        <h5>Log</h5>\n      </NavLink>\n      <NavLink to='/add' exact className='card navLink' activeClassName='navLink--active'>\n        <ReactSVG \n          src={Add} \n          role=\"img\" \n          className=\"svg__dark__fill\"\n          aria-label=\"Add Icon\" \n          fallback={() => <img src={Add} alt=\"add icon\" description=\"add icon\" className=\"svg svg__dark__fill\" />} /> \n        <h5>Add</h5>\n      </NavLink>\n      <NavLink to='/todo' exact className='card navLink' activeClassName='navLink--active'>\n        <ReactSVG \n          src={Todo} \n          role=\"img\" \n          className=\"svg__dark__fill\"\n          aria-label=\"Todo Icon\" \n          fallback={() => <img src={Todo} alt=\"todo icon\" description=\"todo icon\" className=\"svg svg__dark__fill\" />} /> \n        <h5>Todo</h5>\n      </NavLink>\n      <NavLink to='/search' exact className='card navLink' activeClassName='navLink--active'>\n        <ReactSVG \n          src={Search} \n          role=\"img\" \n          className=\"svg__dark__fill\"\n          aria-label=\"Search Icon\" \n          fallback={() => <img src={Search} alt=\"search icon\" description=\"search icon\" className=\"svg svg__dark__fill\" />} /> \n        <h5>Search</h5>\n      </NavLink>\n      <NavLink to='/settings' exact className='card navLink' activeClassName='navLink--active'>\n        <ReactSVG \n          src={Settings} \n          role=\"img\" \n          className=\"svg__dark__fill\"\n          aria-label=\"Settings Icon\" \n          fallback={() => <img src={Settings} alt=\"settings icon\" description=\"settings icon\" className=\"svg svg__dark__fill\" />} /> \n        <h5>Settings</h5>\n      </NavLink>\n    </nav>\n  )\n}\n\nexport default Nav","import React, { useContext } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\nimport UserContext from '../../contexts/UserContext'\n\nfunction ProtectedRoute(props) {\n  const { user, updateUserState } = useContext(UserContext)\n  let isLoggedIn = false\n  if (user && Object.keys(user).length > 0 && user.cookies && user.cookies.length > 0) isLoggedIn = true\n  if (!isLoggedIn) return <Redirect to='/welcome' />\n\n  return (\n    <Route {...props} user={user} updateUserState={updateUserState} >{props.children}</Route>\n  )\n}\n\nexport default ProtectedRoute","import { useEffect } from \"react\"\nimport { useLocation } from \"react-router-dom\"\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation()\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [pathname])\n\n  return null\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { ReactSVG } from 'react-svg'\n\nimport Home from '../images/home.svg'\nimport '../styles/siteTitle.css'\n\nfunction SiteTitle() {\n  return (\n    <Link to='/' className='siteTitle'>\n      <ReactSVG src={Home} role=\"img\" aria-label=\"Home Icon\" className=\"svg\" fallback={() => <img src={Home} alt=\"home icon\" description=\"home icon\" className=\"svg svg__dark__fill\" />} /> \n      <h1>Vehicle Maintenance Log</h1>\n    </Link>\n  )\n}\n\nexport default SiteTitle","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom'\n\nimport Add from './pages/Add'\nimport Edit from './pages/Edit'\nimport GuestHome from './pages/GuestHome'\nimport Home from './pages/Home'\nimport Log from './pages/Log'\nimport NotFound from './pages/NotFound'\nimport PasswordReset from './pages/PasswordReset'\nimport Search from './pages/Search'\nimport Settings from './pages/Settings'\nimport SingleLogEntry from './pages/SingleLogEntry'\nimport Todo from './pages/Todo'\n\nimport Nav from './components/Nav'\nimport ProtectedRoute from './components/account/ProtectedRoute'\nimport ScrollToTop from './components/ScrollToTop'\nimport SiteTitle from './components/SiteTitle'\n\nimport { UserConsumer } from './contexts/UserContext'\n\nfunction AppRouter() {\n  return (\n    <Router>\n      <ScrollToTop />\n      <SiteTitle />\n      <UserConsumer>\n        {({ user, updateUserState }) => \n        <div className=\"container\">\n          <Switch>\n            <Route path=\"/welcome\">\n              <GuestHome />\n            </Route>\n            <ProtectedRoute path=\"/add\">\n              <Add user={user} updateUserState={updateUserState} />\n            </ProtectedRoute>\n            <ProtectedRoute path=\"/log\" exact>\n              <Log user={user} updateUserState={updateUserState} />\n            </ProtectedRoute>\n            <ProtectedRoute path=\"/log/:id/edit\" exact>\n              <Edit user={user} updateUserState={updateUserState} />\n            </ProtectedRoute>\n            <ProtectedRoute path=\"/log/:slug\" exact>\n              <SingleLogEntry user={user} updateUserState={updateUserState} />\n            </ProtectedRoute>\n            <ProtectedRoute path=\"/search\">\n              <Search user={user} updateUserState={updateUserState} />\n            </ProtectedRoute>\n            <ProtectedRoute path=\"/settings\">\n              <Settings user={user} updateUserState={updateUserState} />\n            </ProtectedRoute>\n            <ProtectedRoute path=\"/todo\">\n              <Todo user={user} updateUserState={updateUserState} />\n            </ProtectedRoute>\n            <ProtectedRoute path=\"/\" exact={true}>\n              <Home user={user} updateUserState={updateUserState} />\n            </ProtectedRoute>\n            <Route path=\"/account/reset/:token\" exact>\n              <PasswordReset updateUserState={updateUserState} />\n            </Route>\n            <Route path=\"*\">\n              <NotFound />\n            </Route>\n          </Switch>\n          { user && user.cookies && user.cookies.length > 0 && <Nav /> }\n        </div>\n        }\n      </UserConsumer>\n    </Router>\n  )\n}\n\nexport default AppRouter\n","import React from 'react'\n\nimport { UserProvider } from './contexts/UserContext'\nimport AppRouter from './AppRouter'\n\nimport './styles/normalize.css'\nimport './styles/layout.css'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      user: {\n        name: '', \n        userID: '', \n        sessionID: '', \n        cookies: '',\n        email: '',\n        vehicles: [],\n        log: [],\n        selectedVehicles: []\n      }, \n      updateUserState: this.updateUserState\n    }\n  }\n\n  // TODO componentDidMount() { // check localStorage.getItem(login-preferences) for a stored username }\n\n  updateUserState = async user => {\n    // this.saveUserToLocalStorage(user)\n    await this.setState({ user })\n  }\n\n  render() {\n    const context = { user: this.state.user, updateUserState: this.updateUserState }\n\n    return (\n      <UserProvider value={context}>\n        <AppRouter />\n      </UserProvider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}